{
  "license": "Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.",
  "tool_version": "1.1.0",
  "model_description": "This model is used for question answer matching task, and it achieved auc: 0.7743 in WikiQACorpus test set",
  "inputs": {
    "use_cache": true,
    "dataset_type": "classification",
    "data_paths": {
      "train_data_path": "./dataset/MSRP/msr_paraphrase_train.txt",
      "valid_data_path": "./dataset/MSRP/msr_paraphrase_test.txt",
      "test_data_path": "./dataset/MSRP/msr_paraphrase_test.txt",
      "pre_trained_emb": "./dataset/GloVe/glove.840B.300d.txt"
    },
    "file_with_col_header": true,
    "add_start_end_for_seq": true,
    "file_header": {				
      "Quality": 0,
      "#1 ID": 1,
      "#2 ID": 2,
      "#1 String": 3,
      "#2 String": 4
    },
    "model_inputs": {
      "question": ["#1 String"],
      "passage": ["#2 String"]
    },
    "target": ["Quality"]
  },
  "outputs":{
    "save_base_dir": "./models/wikiqa_msrp/",
    "model_name": "model.nb",
    "train_log_name": "train.log",
    "test_log_name": "test.log",
    "predict_log_name": "predict.log",
    "predict_fields": ["Quality"],
    "predict_output_name": "predict.tsv",
    "cache_dir": ".cache.msrp/"
  },
  "training_params": {
    "vocabulary": {
      "min_word_frequency": 1
    },
    "optimizer": {
      "name": "Adam",
      "params": {
      }
    },
    "lr_decay": 0.95,
    "minimum_lr": 0.0001,
    "epoch_start_lr_decay": 3,
    "use_gpu": true,
    "batch_size": 30,
    "batch_num_to_show_results": 50,
    "max_epoch": 10,
    "valid_times_per_epoch": 5,
    "fixed_lengths":{
      "question": 30,
      "passage": 30  
    }
  },
  "architecture":[
    {
        "layer": "Embedding",
        "conf": {
          "word": {
            "cols": ["#1 String", "#2 String"],
            "dim": 300,
            "fix_weight": true
          }
        }
    },
    {
      "layer_id": "question_dropout",
      "layer": "Dropout",
      "conf": {
          "dropout": 0.2
      },
      "inputs": ["question"]
    },
    {
      "layer_id": "passage_dropout",
      "layer": "Dropout",
      "conf": {
          "dropout": 0.2
      },
      "inputs": ["passage"]
    },
    {
      "layer_id": "interaction",
      "layer": "Interaction",
      "conf": {
          "dropout": 0.2,
          "matching_type": "general"
      },
      "inputs": ["question_dropout", "passage_dropout"]
    },
    {
      "layer_id": "cnn_1",
      "layer": "Conv2d",
      "conf": {
          "stride": 1,
          "window_size": 5,
          "padding": 3,
          "input_channel_num": 1,
          "output_channel_num": 8
      },
      "inputs": ["interaction"]
    },
    {
      "layer_id": "maxpooling_1",
      "layer": "Pooling2d",
      "conf": {
          "stride": 1,
          "window_size": 3,
          "padding": 1,
          "input_channel_num": 8,
          "pool_type": "max"
      },
      "inputs": ["cnn_1"]
    },
    {
      "layer_id": "cnn_2",
      "layer": "Conv2d",
      "conf": {
          "stride": 1,
          "window_size": 3,
          "padding": 1,
          "input_channel_num": 8,
          "output_channel_num": 16
      },
      "inputs": ["maxpooling_1"]
    },
    {
      "layer_id": "maxpooling_2",
      "layer": "Pooling2d",
      "conf": {
          "stride": 1,
          "window_size": 5,
          "padding": 2,
          "input_channel_num": 16,
          "pool_type": "max"
      },
      "inputs": ["cnn_2"]
    },
    {
      "layer_id": "flatten",
      "layer": "Flatten",
      "conf": {
      },
      "inputs": ["maxpooling_2"]
    },
    {
        "output_layer_flag": true,
        "layer_id": "output",
        "layer": "Linear",
        "conf": {
          "hidden_dim": [128,2],
          "activation": "PReLU",
          "last_hidden_activation": false
        },
        "inputs": ["flatten"]
    }
  ],
  "loss": {
    "losses": [
      {
        "type": "CrossEntropyLoss",
        "conf": {
          "weight": [0.5,0.5],
          "size_average": true
        },
        "inputs": ["output","Quality"]
      }
    ]
  },
  "metrics": ["accuracy","f1","auc"]
}