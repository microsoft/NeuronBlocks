{
  "license": "Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.",
  "tool_version": "1.1.0",
  "model_description": "This model is used for question answer matching task, and it achieved auc: 0.7612 in WikiQACorpus test set",
  "language": "English",
  "inputs": {
    "use_cache": true,
    "dataset_type": "classification",
    "data_paths": {
      "train_data_path": "./dataset/WikiQACorpus/WikiQA-train.tsv",
      "valid_data_path": "./dataset/WikiQACorpus/WikiQA-dev.tsv",
      "test_data_path": "./dataset/WikiQACorpus/WikiQA-test.tsv",
      "pre_trained_emb": "./dataset/Glove/glove.840B.300d.txt"
    },
    "file_with_col_header": true,
    "add_start_end_for_seq": true,
    "file_header": {
      "question_id": 0,
      "question_text": 1,
      "document_id": 2,
      "document_title": 3,
      "passage_id": 4,
      "passage_text": 5,
      "label":  6
    },
    "model_inputs": {
      "question": ["question_text"],
      "passage": ["passage_text"]
    },
    "target": ["label"]
  },
  "outputs":{
    "save_base_dir": "./models/wikiqa_arcii/",
    "model_name": "model.nb",
    "train_log_name": "train.log",
    "test_log_name": "test.log",
    "predict_log_name": "predict.log",
    "predict_fields": ["prediction"],
    "predict_output_name": "predict.tsv",
    "cache_dir": ".cache.wikiqa_arcii/"
  },
  "training_params": {
    "vocabulary": {
      "min_word_frequency": 1
    },
    "optimizer": {
      "name": "Adam",
      "params": {
        "lr": 0.001
      }
    },
    "fixed_lengths": {
      "question": 200,
      "passage": 200
    },
    "lr_decay": 0.9,
    "minimum_lr": 0.00005,
    "epoch_start_lr_decay": 20,
    "use_gpu": true,
    "cpu_num_workers": 1,
    "batch_size": 64,
    "batch_num_to_show_results": 500,
    "max_epoch": 10,
    "valid_times_per_epoch": 1
  },
  "architecture":[
    {
        "layer": "Embedding",
        "conf": {
          "word": {
            "cols": ["question_text", "passage_text"],
            "dim": 300,
            "fix_weight": true
          }
        }
    },
    {
        "layer_id": "s1_dropout",
        "layer": "Dropout",
        "conf": {
            "dropout": 0.5
        },
        "inputs": ["question"]
    },
    {
        "layer_id": "s2_dropout",
        "layer": "Dropout",
        "conf": {
            "dropout": 0.5
        },
        "inputs": ["passage"]
    },
    {
        "layer_id": "s1_conv_1",
        "layer": "Conv",
        "conf": {
            "window_size": 3,
            "output_channel_num": 32,
            "padding_type": "SAME",
            "remind_lengths": false
        },
        "inputs": ["s1_dropout"]
    },
    {
        "layer_id": "s2_conv_1",
        "layer": "Conv",
        "conf": {
            "window_size": 3,
            "output_channel_num": 32,
            "padding_type": "SAME",
            "remind_lengths": false
        },
        "inputs": ["s2_dropout"]
    },
    {
        "layer_id": "match",
        "layer": "Combination2D",
        "conf": {
            "operations": ["add"]
        },
        "inputs": ["s1_conv_1", "s2_conv_1"]
    },
    {
        "layer_id": "conv2D_1",
        "layer": "Conv2D",
        "conf": {
            "window_size": [3,3],
            "output_channel_num": 32,
            "padding_type": "SAME"
        },
        "inputs": ["match"]
    },
    {
        "layer_id": "pool2D_1",
        "layer": "Pooling2D",
        "conf": {
            "window_size": [2,2]
        },
        "inputs": ["conv2D_1"]
    },
    {
        "layer_id": "conv2D_2",
        "layer": "Conv2D",
        "conf": {
            "window_size": [3,3],
            "output_channel_num": 32,
            "padding_type": "SAME"
        },
        "inputs": ["pool2D_1"]
    },
    {
        "layer_id": "pool2D_2",
        "layer": "Pooling2D",
        "conf": {
            "window_size": [2,2]
        },
        "inputs": ["conv2D_2"]
    },
    {
        "layer_id": "flatten",
        "layer": "Flatten",
      "conf": {

        },
        "inputs": ["pool2D_2"]
    },
    {
        "layer_id": "dropout",
        "layer": "Dropout",
        "conf": {
            "dropout": 0.5
        },
        "inputs": ["flatten"]
    },
    {
        "layer_id": "mlp",
        "layer": "Linear",
        "conf": {
          "hidden_dim": [64, 32],
          "activation": "ReLU",
          "batch_norm": true,
          "last_hidden_activation": true
        },
        "inputs": ["dropout"]
    },
    {
        "output_layer_flag": true,
        "layer_id": "output",
        "layer": "Linear",
        "conf": {
          "hidden_dim": [-1],
          "activation": "ReLU",
          "batch_norm": true,
          "last_hidden_activation": false,
          "last_hidden_softmax": true
        },
        "inputs": ["mlp"]
    }
  ],
  "loss": {
    "losses": [
      {
        "type": "CrossEntropyLoss",
        "conf": {
          "weight": [0.1,0.9],
          "size_average": true
        },
        "inputs": ["output","label"]
      }
    ]
  },
  "metrics": ["auc", "accuracy"]
}
